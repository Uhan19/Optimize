/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface UnoptimizedContractInterface extends utils.Interface {
  functions: {
    "budgetPerHeadExceedsDept(uint256,uint256)": FunctionFragment;
    "budgetPerHeadExceedsDeptOrOverall(uint256,uint256)": FunctionFragment;
    "budgetPerHeadExceedsOverall(uint256)": FunctionFragment;
    "setBudget(uint256,uint256)": FunctionFragment;
    "setHeadCount(uint256,uint256)": FunctionFragment;
    "totalBudget()": FunctionFragment;
    "totalHeadCount()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "budgetPerHeadExceedsDept"
      | "budgetPerHeadExceedsDeptOrOverall"
      | "budgetPerHeadExceedsOverall"
      | "setBudget"
      | "setHeadCount"
      | "totalBudget"
      | "totalHeadCount"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "budgetPerHeadExceedsDept",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "budgetPerHeadExceedsDeptOrOverall",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "budgetPerHeadExceedsOverall",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setBudget",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setHeadCount",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "totalBudget",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalHeadCount",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "budgetPerHeadExceedsDept",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "budgetPerHeadExceedsDeptOrOverall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "budgetPerHeadExceedsOverall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setBudget", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setHeadCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalBudget",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalHeadCount",
    data: BytesLike
  ): Result;

  events: {};
}

export interface UnoptimizedContract extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: UnoptimizedContractInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    budgetPerHeadExceedsDept(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    budgetPerHeadExceedsDeptOrOverall(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    budgetPerHeadExceedsOverall(
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setBudget(
      deptNum: PromiseOrValue<BigNumberish>,
      newBudget: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setHeadCount(
      deptNum: PromiseOrValue<BigNumberish>,
      newCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    totalBudget(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalHeadCount(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  budgetPerHeadExceedsDept(
    deptNum: PromiseOrValue<BigNumberish>,
    budgetPerHead: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  budgetPerHeadExceedsDeptOrOverall(
    deptNum: PromiseOrValue<BigNumberish>,
    budgetPerHead: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  budgetPerHeadExceedsOverall(
    budgetPerHead: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setBudget(
    deptNum: PromiseOrValue<BigNumberish>,
    newBudget: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setHeadCount(
    deptNum: PromiseOrValue<BigNumberish>,
    newCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  totalBudget(overrides?: CallOverrides): Promise<BigNumber>;

  totalHeadCount(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    budgetPerHeadExceedsDept(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    budgetPerHeadExceedsDeptOrOverall(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    budgetPerHeadExceedsOverall(
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setBudget(
      deptNum: PromiseOrValue<BigNumberish>,
      newBudget: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setHeadCount(
      deptNum: PromiseOrValue<BigNumberish>,
      newCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    totalBudget(overrides?: CallOverrides): Promise<BigNumber>;

    totalHeadCount(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    budgetPerHeadExceedsDept(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    budgetPerHeadExceedsDeptOrOverall(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    budgetPerHeadExceedsOverall(
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setBudget(
      deptNum: PromiseOrValue<BigNumberish>,
      newBudget: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setHeadCount(
      deptNum: PromiseOrValue<BigNumberish>,
      newCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    totalBudget(overrides?: CallOverrides): Promise<BigNumber>;

    totalHeadCount(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    budgetPerHeadExceedsDept(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    budgetPerHeadExceedsDeptOrOverall(
      deptNum: PromiseOrValue<BigNumberish>,
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    budgetPerHeadExceedsOverall(
      budgetPerHead: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setBudget(
      deptNum: PromiseOrValue<BigNumberish>,
      newBudget: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setHeadCount(
      deptNum: PromiseOrValue<BigNumberish>,
      newCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    totalBudget(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalHeadCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
